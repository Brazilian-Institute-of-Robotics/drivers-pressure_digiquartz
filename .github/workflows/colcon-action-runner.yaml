# Workflow: colcon-action-runner
#
# This GitHub Actions workflow, named "colcon-action-runner,"
# is designed to be triggered on workflow calls.
# This action build, tests and run coverage with ROS or ROS 2 workspace from source.
#
# Trigger
# This workflow is triggered by a `workflow_call` event.
# Thirdparty actions
# https://github.com/marketplace/actions/ros-2-ci-action
# Comments a pull request with the code coverage generated by your tests.
# https://github.com/marketplace/ros-tooling/setup-ros

name: colcon-action-runner

on: [pull_request, workflow_dispatch]

jobs:
  setup-colcon-ci:
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [jammy]
        distro: [humble]
    runs-on: [self-hosted, colcon-hosted, linux, x64]

    container:
      image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu }}-latest

    name: run ${{ matrix.distro }} on colcon
    steps:
      - name: setup dependencies
        shell: bash
        run: |
          rm -rf /tmp/dependencies.repos
          curl -H \
          "Authorization: token  ${{ secrets.PAT_ACTION_USER_CIBOT }}" \
          https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/dependencies.repos \
          -o /tmp/dependencies.repos
      - name: setup ros environment
        uses: actions/checkout@v4
        with:
          repository: Brazilian-Institute-of-Robotics/action-colcon-ci
          token: ${{ secrets.PAT_ACTION_USER_CIBOT }}
          ref: feat-action-colcon-ci
      - name: BUILD AND TEST
        id: action-ros-ci
        uses: ./
        with:
          package-name: |
            ${{ github.event.repository.name }}
          import-token: ${{ secrets.PAT_ACTION_USER_CIBOT }}
          target-ros2-distro: ${{ matrix.distro }}
          vcs-repo-file-url: /tmp/dependencies.repos
          skip-coverage: true
          colcon-extra-args: --event-handlers console_direct+ --executor sequential
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc"],
                "cmake-args": [
                  "-DCMAKE_CXX_FLAGS=-fprofile-arcs -ftest-coverage --coverage",
                  "-DCMAKE_BUILD_TYPE=Debug"
                ]
              }
            }
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
      - name: run coverage
        working-directory: ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/
        shell: bash
        run: |
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y python3-colcon-lcov-result python3-colcon-coveragepy-result
            source /opt/ros/humble/setup.bash
            [ -f ./install/setup.bash ] && source ./install/setup.bash
            colcon build --packages-select  ${{ github.event.repository.name }} \
                  --cmake-args \
                  -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage --coverage" \
                  -DCMAKE_C_FLAGS="-fprofile-arcs -ftest-coverage --coverage" \
                  -DCMAKE_BUILD_TYPE="Debug" --event-handlers console_direct+
            colcon lcov-result --packages-select  ${{ github.event.repository.name }} --initial --verbose
            colcon test --packages-select  ${{ github.event.repository.name }}  --event-handlers console_direct+
            colcon lcov-result --packages-select  ${{ github.event.repository.name }} \
            --filter **/test/* **/CMakeCCompilerId.c* **/CMakeCXXCompilerId.cp* \
            --lcov-base  ${{ github.event.repository.name }} --verbose
      - name: report coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.PAT_ACTION_USER_CIBOT }}
          lcov-file: ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/${{ github.event.repository.name }}/total_coverage.info
          delete-old-comments: true
